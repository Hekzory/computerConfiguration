---
- name: arch-core.yml - base setup for arch
  hosts: arch
  become: no

  vars:
    the_user: "{{ ansible_user_id }}"

  tasks:

# CONFIG - Pacman

    - name: Pacman - Enable color, ParallelDownloads, ILoveCandy, VerbosePkgLists, and NoExtract fix for warnings
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/pacman.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - { regexp: '^#Color$', line: 'Color' }
        - { regexp: 'ParallelDownloads =', line: 'ParallelDownloads = 16' }
        - { regexp: '^#ILoveCandy$', line: 'ILoveCandy' }
        - { regexp: '^#VerbosePkgLists$', line: 'VerbosePkgLists' }
        - { regexp: '^#NoExtract', line: 'NoExtract = usr/lib/security/pam_systemd_home.so' }

# CONFIG - nano

    - name: Nano - Enable color in config
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/nanorc
        line: '{{ item.line }}'
      loop:
        - { line: 'include "/usr/share/nano/extra/*.nanorc"' }
        - { line: 'include "/usr/share/nano/*.nanorc"' }

# CONFIG - makepkg

    - name: makepkg - disable pkg compression
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/makepkg.conf
        regexp: "PKGEXT='.pkg.tar.zst'"
        line: "PKGEXT='.pkg.tar'"

# PACKAGES - Upgrade

    - name: Full system upgrade via pacman
      become: yes
      community.general.pacman:
        update_cache: true
        upgrade: true


# PACKAGES - Setup

    - name: Full system upgrade via pacman and setup base needed packages
      become: yes
      community.general.pacman:
        update_cache: yes
        name:
          - nano                         # editor
          - less                         # easy view utility
          - git                          # to clone github repos
          - base-devel                   # required packages for developer stuff
          - curl                         # download utility
          - wget                         # download utility
          - rsync                        # copy utility
          - bat                          # prettier cat
          - fastfetch                    # system info
          - btop                         # better resource monitor
          - lsd                          # better ls
          - zsh                          # better shell
          - zsh-autosuggestions          # self-explanatory
          - zsh-syntax-highlighting      # self-explanatory
          - zsh-history-substring-search # self-explanatory
          - zsh-completions              # self-explanatory
          - inxi                         # system info tool
          - pigz                         # faster gzip
          - pbzip2                       # faster bzip
          - fwupd                        # firmware update tool
          - amd-ucode                    # amd microcode
          - linux-firmware               # linux firmware
          - github-cli                   # better github integration
          - networkmanager               # self-explanatory
          - python3                      # self-explanatory
          - reflector                    # mirror updater
          - duf                          # df but better
          - ripgrep                      # faster grep
          - fzf                          # fast file search
        state: present

# CONFIG - GIT

    - name: set gitconfig to personal preference at ~/.gitconfig
      community.general.git_config:
        scope: global
        name: "{{ item.name }}"
        value: "{{ item.value }}"
      loop:
        - { name: 'diff.indentHeuristic', value: 'true' }
        - { name: 'diff.algorithm', value: 'minimal' }



# CONFIG - OPTIMIZATION AND COMPATIBILITY

    - name: fstab - change relatime to noatime
      become: yes
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: 'relatime'
        replace: 'noatime'

    - name: Disable unnecessary services
      become: yes
      ansible.builtin.systemd_service:
        name: "{{ item }}"
        state: stopped
        enabled: no
      loop:
        - ModemManager.service  # Not needed by most people, so disable by default

    - name: Blacklist unnecessary modules
      become: yes
      community.general.kernel_blacklist:
        name: "{{ item }}"
        state: present
      loop:
        - pcspkr             # motherboard speaker, useless
        - snd_pcsp           # motherboard speaker, useless
        - eeepc_wmi          # useless errors/warnings for many pcs, not useful unless you have eeepc laptop
        - nouveau            # does not work properly on newer nvidia videocards or with worse performance
        - iTCO_wdt           # watchdog timer, small performance improvement
        - sp5100_tco         # watchdog timer, small performance improvement
        - floppy             # useless
        - parport            # parallel port support, rarely used nowadays
        - ppdev              # parallel port device support, rarely used
        - snd_hda_codec_hdmi # audio through hdmi, almost never used
        - snd_hda_intel      # audio through hdmi, almost never used
        - legion_laptop      # used by legion laptops, but wrongly loaded by every device i have

    - name: copy reflector config - to setup proper mirror update
      become: yes
      ansible.builtin.copy:
        src: "etc/xdg/reflector/reflector.conf"
        dest: "/etc/xdg/reflector/reflector.conf"
        force: True
        owner: "root"
        group: "root"
        mode: u+rw,g+r,o+r

    - name: Enable necessary services
      become: yes
      ansible.builtin.systemd_service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - reflector.timer
        - fstrim.timer


# CONFIG - ZSH

    - name: change shell to zsh
      become: yes
      user:
        shell: /bin/zsh
        name: "{{ the_user }}"

    - name: copy zsh dotfiles
      copy:
        src: "user_home/{{ item }}"
        dest: "/home/{{ the_user }}/{{ item }}"
        force: True
        owner: "{{ the_user }}"
        group: "{{ the_user }}"
        mode: u+rw,g+r,o--
      loop:
        - .zshrc
        - .p10k-main.zsh
        - .p10k-portable.zsh
        - .p10k.zsh

# CONFIG - udev

    - name: ioscheduler settings - change for better performance
      become: yes
      copy:
        src: "etc/udev/rules.d/{{ item }}"
        dest: "/etc/udev/rules.d/{{ item }}"
        force: True
        owner: "root"
        group: "root"
        mode: u+rw,g+r,o+r
      loop:
        - 60-ioschedulers.rules # ioscheduler settings - change for better performance
        - 50-sata.rules         # sata power settings - change for better performance

# User configuration - AUR preparation

#- name: Create the `aur_builder` user
#  become: yes
#  ansible.builtin.user:
#    name: aur_builder
#    create_home: yes
#    group: wheel

#- name: Allow the `aur_builder` user to run `sudo pacman` without a password
#  become: yes
#  ansible.builtin.lineinfile:
#    path: /etc/sudoers.d/11-install-aur_builder
#    line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
#    create: yes
#    mode: 0644
#    validate: 'visudo -cf %s'

# AUR Setup

    - name: Install yay using makepkg if it isn't installed already
      kewlfft.aur.aur:
        name: yay
        use: makepkg
        state: present

# PACKAGES - AUR packages setup

    - name: Install packages from AUR using yay
      kewlfft.aur.aur:
        name:
          - zsh-theme-powerlevel10k-git
        use: yay
        state: present
