- name: Arch-core.yml - base setup for arch
  hosts: arch
  become: false
  vars:
    the_user: "{{ ansible_user_id }}"
  tasks:
    - name: Pre-flight checks
      block:
        - name: Check if running on Arch Linux
          ansible.builtin.fail:
            msg: "This playbook is designed for Arch Linux only"
          when: ansible_distribution != "Archlinux"
        - name: Check internet connectivity
          ansible.builtin.uri:
            url: http://archlinux.org
            timeout: 5
          register: internet_check
          failed_when: false
        - name: Fail if no internet
          ansible.builtin.fail:
            msg: "Internet connection required"
          when: internet_check.failed
    # CONFIG - Pacman
    - name: Pacman - Enable color, ParallelDownloads, ILoveCandy, VerbosePkgLists # , and NoExtract fix for warnings
      become: true
      ansible.builtin.lineinfile:
        path: /etc/pacman.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        # this one removes warnings but may break something so disabling by default, you are free to uncomment it
        # - { regexp: '^#NoExtract', line: 'NoExtract = usr/lib/security/pam_systemd_home.so' }
        - {regexp: "^#Color$", line: "Color"}
        - {regexp: "ParallelDownloads =", line: "ParallelDownloads = 16"}
        - {regexp: "^#ILoveCandy$", line: "ILoveCandy"}
        - {regexp: "^#VerbosePkgLists$", line: "VerbosePkgLists"}
    # CONFIG - nano
    - name: Nano - Enable color in config
      become: true
      ansible.builtin.lineinfile:
        path: /etc/nanorc
        line: "{{ item.line }}"
      loop:
        - {line: 'include "/usr/share/nano/extra/*.nanorc"'}
        - {line: 'include "/usr/share/nano/*.nanorc"'}
    # PACKAGES - Upgrade
    - name: Full system upgrade via pacman
      become: true
      community.general.pacman:
        update_cache: true
        upgrade: true
    # PACKAGES - Setup
    - name: Full system upgrade via pacman and setup base needed packages
      become: true
      community.general.pacman:
        update_cache: true
        name:
          # Core Utilities - The Basics, But Better
          - nano # When vim feels like overkill
          - less # For when you need to scroll *gracefully*
          - git # Version control
          - base-devel # Because we build things here
          - curl # HTTP wizardry
          - wget # When curl feels too fancy
          - rsync # Moving bits, atomically
          - iwd # Modern WiFi daemon - faster and more reliable than wpa_supplicant
          # Enhanced Experience
          - bat # cat with wings
          - fastfetch # System introspection with style
          - btop # Resource monitoring as an art form
          - eza # ls evolved - because progress matters
          - inxi # System insights, delivered with precision
          # Performance Enhancers - Speed is a feature
          - pigz # Parallel gzip - because waiting is obsolete
          - pbzip2 # Parallel bzip - same story
          - lld # Linking at the speed of thought
          - openmp # Parallel processing? Yes, please
          - ccache # Cache your builds
          # Development Arsenal - Tools of the Trade
          - docker # Containers
          - docker-compose # Orchestra conductor for your containers
          - docker-buildx # Because building should be an experience
          - neovim # Text editing ascended
          - git-delta # Diffs that tell a story
          - stylua # Lua, but make it pretty
          - taplo-cli # TOML formatter - because structure matters
          - pnpm # Package management at light speed
          - npm # The necessary evil
          - fish # Shell evolution in progress
          - gopls # Go lsp server
          - ruff # Python's new best friend
          - shfmt # Because shell scripts deserve love too
          - yamlfmt # yaml formatter
          # System Essentials - The Foundation
          - fwupd # Firmware: the forgotten update
          - amd-ucode # AMD microcode - because bare metal matters
          - linux-firmware # The kernel's wardrobe
          - networkmanager # Network whisperer
          - python3 # The snake that powers everything
          - reflector # Mirror optimization magic
          # Quality of Life - Because life's too short for bad tools
          - ripgrep # grep at ludicrous speed
          - fzf # Fuzzy finding nirvana
          - duf # Disk usage, but make it beautiful
          - wl-clipboard # Wayland clipboard sorcery
          - tree-sitter-cli # AST manipulation made elegant
          - fd # fast find alternative
        state: present
    # CONFIG - GIT
    - name: Set gitconfig to personal preference at ~/.gitconfig
      community.general.git_config:
        scope: global
        name: "{{ item.name }}"
        value: "{{ item.value }}"
      loop:
        - {name: "diff.indentHeuristic", value: "true"}
        - {name: "diff.algorithm", value: "minimal"}
        - {name: "diff.colorMoved", value: "default"}
        - {name: "core.pager", value: "delta"}
        - {name: "interactive.diffFilter", value: "delta --color-only"}
        - {name: "delta.navigate", value: "true"}
        - {name: "merge.conflictstyle", value: "diff3"}
        - {name: "pull.rebase", value: "true"}  # rebase instead of merge on pull
        - {name: "rebase.autoStash", value: "true"}  # auto-stash before rebase
        - {name: "push.default", value: "current"}  # push current branch
        - {name: "push.autoSetupRemote", value: "true"}  # auto-track remote
        - {name: "fetch.prune", value: "true"}  # remove deleted remote branches
        - {name: "fetch.pruneTags", value: "true"}
        - {name: "core.preloadindex", value: "true"}
        - {name: "help.autocorrect", value: "20"}  # auto-correct typos after 2 sec
    # CONFIG - OPTIMIZATION AND COMPATIBILITY
    - name: Fstab - change relatime to noatime
      become: true
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: "relatime"
        replace: "noatime"
    - name: Ensure file exists
      become: true
      ansible.builtin.copy:
        content: ""
        dest: "/etc/sysctl.d/99-sysctl.conf"
        force: false
        group: root
        owner: root
        mode: u+rw,g+r,o+r
    - name: Configure sysctl for better performance
      become: true
      failed_when: false # some of them might not be applied dynamically or at all in some systems
      ansible.posix.sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        sysctl_set: true
        sysctl_file: "/etc/sysctl.d/99-sysctl.conf"
        state: present
        reload: true
      loop:
        - {key: "-net.core.somaxconn", value: "8192"}
        - {key: "-net.ipv4.tcp_fastopen", value: "3"}
        - {key: "-kernel.nmi_watchdog", value: "0"}
        - {key: "-net.core.default_qdisc", value: "fq"}
        - {key: "-net.ipv4.tcp_congestion_control", value: "bbr"}
        - {key: "-net.ipv4.tcp_max_syn_backlog", value: "8192"}
        - {key: "-net.ipv4.tcp_mtu_probing", value: "1"}
        - {key: "-net.ipv4.tcp_slow_start_after_idle", value: "0"}
        - {key: "-net.ipv4.tcp_ecn", value: "1"} # ECN for better congestion control with bbr
        - {key: "-net.ipv4.tcp_tw_reuse", value: "1"} # Reuse TIME_WAIT sockets (safe for client)
        # Allow larger per-socket buffers
        - {key: "-net.core.rmem_max", value: "33554432"}        # 32 MiB
        - {key: "-net.core.wmem_max", value: "33554432"}        # 32 MiB
        - {key: "-net.core.rmem_default", value: "1048576"}     # 1 MiB
        - {key: "-net.core.wmem_default", value: "1048576"}     # 1 MiB
        - {key: "-net.ipv4.udp_rmem_min", value: "16384"}
        - {key: "-net.ipv4.udp_wmem_min", value: "16384"}

    - name: Disable unnecessary services
      become: true
      ansible.builtin.service:
        name: "{{ item }}"
        state: stopped
        enabled: false
      register: service_command_output
      failed_when: >
        service_command_output.failed and 'unrecognized service' not in service_command_output.msg
        and 'Could not find the requested service' not in service_command_output.msg
      loop:
        - ModemManager.service # Not needed by most people, so disable by default
    - name: Blacklist unnecessary modules
      become: true
      community.general.kernel_blacklist:
        name: "{{ item }}"
        state: present
      loop:
        - pcspkr # motherboard speaker, useless
        - snd_pcsp # motherboard speaker, useless
        - eeepc_wmi # useless errors/warnings for many pcs, not useful unless you have eeepc laptop
        - iTCO_wdt # watchdog timer, small performance improvement
        - sp5100_tco # watchdog timer, small performance improvement
        - floppy # useless, also bad for security
        - parport # parallel port support, rarely used nowadays
        - ppdev # parallel port device support, rarely used
        - legion_laptop # should used by legion laptops, but wrongly loaded by every device i have
    - name: Copy reflector config - to setup proper mirror update
      become: true
      ansible.builtin.copy:
        src: "etc/xdg/reflector/reflector.conf"
        dest: "/etc/xdg/reflector/reflector.conf"
        force: true
        owner: "root"
        group: "root"
        mode: u+rw,g+r,o+r
    - name: Enable/disable some services based on if running under WSL
      become: true
      ansible.builtin.service:
        name: "{{ item }}"
        state: "{{ 'stopped' if 'microsoft' in ansible_facts['kernel'] else 'started' }}"
        enabled: "{{ 'microsoft' not in ansible_facts['kernel'] }}"
      loop:
        - fstrim.timer
    - name: Enable necessary services
      become: true
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - reflector.timer
        - docker.socket
    # CONFIG - udev
    - name: Ioscheduler settings - change for better performance
      become: true
      ansible.builtin.copy:
        src: "etc/udev/rules.d/{{ item }}"
        dest: "/etc/udev/rules.d/{{ item }}"
        force: true
        owner: "root"
        group: "root"
        mode: u+rw,g+r,o+r
      loop:
        - 60-ioschedulers.rules # ioscheduler settings - change for better performance
        - 50-sata.rules # sata power settings - change for better performance
    - name: Check if yay is installed
      ansible.builtin.stat:
        path: /usr/bin/yay
      register: yay_installed
    # AUR Setup
    - name: Install yay using makepkg if it isn't installed already
      kewlfft.aur.aur:
        name: yay
        use: makepkg
        state: present
      when: not yay_installed.stat.exists
    # PACKAGES - AUR packages setup
    - name: Ensure wrong packages are absent
      become: true
      community.general.pacman:
        name:
          - zsh-theme-powerlevel10k # unsupported even though present in official repos, should be replaced by git version anyway if used at all
          - zsh-theme-powerlevel10k-git # also not supported anymore so remove it for good
          - oh-my-posh-git # git version is updated ten times a day
          - oh-my-posh # compiled version may break sometimes
          - zsh-syntax-highlighting # we are going to install a better alternative, this one not used anymore
          - lsd # replaced by eza
        state: absent
    - name: Install packages from AUR using yay
      kewlfft.aur.aur:
        name:
          # - zsh-fast-syntax-highlighting - switched to fish for now
          - oh-my-posh-bin # most stable one
        use: yay
        state: present
    # CONFIG - change shell
    - name: Change shell to fish
      become: true
      ansible.builtin.user:
        shell: /bin/fish
        name: "{{ the_user }}"
    - name: Ensure config directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        recurse: true
        state: directory
      loop:
        - "/home/{{ the_user }}/.config/fish"
        - "/home/{{ the_user }}/.config/fastfetch"
        - "/home/{{ the_user }}/.config/btop"
        - "/home/{{ the_user }}/.config/xdg-desktop-portal"
    # CONFIG - shell configs setup
    - name: Copy config files + themes
      ansible.builtin.copy:
        src: "user_home/{{ item }}"
        dest: "/home/{{ the_user }}/{{ item }}"
        force: true
        owner: "{{ the_user }}"
        group: "{{ the_user }}"
        mode: u+rw,g+r,o--
      loop:
        # - .zshrc
        - tokyofine.omp.toml
        - .config/fish/config.fish
        - .config/fastfetch/config.jsonc
        - .config/btop/btop.conf
        - .config/xdg-desktop-portal/portals.conf
    # DOCKER
    - name: Add existing user to group docker and wheel if not present
      become: true
      ansible.builtin.user:
        name: "{{ the_user }}"
        groups:
          - wheel
          - docker
        append: true
    - name: Docker cache cleanup
      failed_when: false # It's ok if cleanup fails, let's not break the whole playbook over this
      changed_when: false
      community.docker.docker_prune:
        containers: true
        images: true
        networks: true
        volumes: true
        builder_cache: true
    # CONFIG - pnpm
    - name: Install global pnpm packages
      community.general.pnpm:
        name: "{{ item }}"
        state: latest
        global: true
      loop:
        - prettier # formatting in neovim and in general
        - neovim # neovim integration
    # CONFIG - neovim
    - name: Ensure nvim directory exists
      ansible.builtin.file:
        path: "/home/{{ the_user }}/.config/nvim"
        recurse: true
        state: directory
    - name: Copy neovim dotfiles
      ansible.builtin.copy:
        src: "user_home/.config/nvim/{{ item }}"
        dest: "/home/{{ the_user }}/.config/nvim/{{ item }}"
        force: true
        owner: "{{ the_user }}"
        group: "{{ the_user }}"
        mode: u+rw,g+r,o--
      loop:
        - init.lua
    # CONFIG - NETWORK OPTIMIZATION
    - name: Configure NetworkManager to use iwd backend
      become: true
      community.general.ini_file:
        path: /etc/NetworkManager/NetworkManager.conf
        section: device
        option: wifi.backend
        value: iwd
        mode: '0644'

    - name: Configure WiFi power saving and optimization
      become: true
      ansible.builtin.copy:
        dest: /etc/modprobe.d/iwlwifi.conf
        content: |
          # Disable power saving for better performance
          options iwlwifi power_save=0
          # Disable software crypto for better performance
          options iwlwifi swcrypto=0
          # Set power scheme to performance
          options iwlmvm power_scheme=1
        mode: '0644'
